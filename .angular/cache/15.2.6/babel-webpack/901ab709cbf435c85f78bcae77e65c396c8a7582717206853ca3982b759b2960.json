{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { EMAIL_VALIDATE, NAME_VALIDATE, NUMBER_VALIDATE } from 'src/app/constants/constants';\nimport Swal from 'sweetalert2';\nlet FormularioComponent = class FormularioComponent {\n  constructor(fb, toaster, ubicacionPais) {\n    this.fb = fb;\n    this.toaster = toaster;\n    this.ubicacionPais = ubicacionPais;\n    this.isEmail = EMAIL_VALIDATE;\n    this.isName = NAME_VALIDATE;\n    this.isMoney = NUMBER_VALIDATE;\n    this.isDate = '';\n  }\n  ngOnInit() {\n    this.formularioGeneral = this.iniciarFormulario();\n  }\n  iniciarFormulario() {\n    return this.fb.group({\n      nombre: ['', [Validators.required, Validators.pattern(this.isName)]],\n      apellido: ['', [Validators.required, Validators.pattern(this.isName)]],\n      correo: ['', [Validators.required, Validators.pattern(this.isEmail)]],\n      genero: ['', [Validators.required]],\n      fecha: ['', [Validators.required, Validators.pattern(this.isDate)]],\n      mensaje: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(200)]],\n      departamento: ['', [Validators.required]],\n      municipio: ['', [Validators.required]],\n      canton: ['', [Validators.required]]\n    });\n  }\n  esCampoValido(campo) {\n    const ValidarCampo = this.formularioGeneral.get(campo);\n    return !ValidarCampo?.valid && ValidarCampo?.touched ? 'is-invalid' : ValidarCampo?.touched ? 'is-valid' : '';\n  }\n  guardar() {\n    if (this.formularioGeneral.valid) {\n      Swal.fire({\n        position: 'center',\n        title: 'Buen trabajo!',\n        text: `submit disparado, formulario es valido`,\n        icon: 'info'\n      });\n      console.log(this.formularioGeneral.value);\n    } else {\n      Swal.fire({\n        position: 'center',\n        title: 'Faltan datos en el formulario',\n        text: `submit disparado, formulario No valido`,\n        icon: 'warning'\n      });\n      return Object.values(this.formularioGeneral.controls).forEach(control => control.markAllAsTouched());\n    }\n  }\n};\nFormularioComponent = __decorate([Component({\n  selector: 'app-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n})], FormularioComponent);\nexport { FormularioComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","EMAIL_VALIDATE","NAME_VALIDATE","NUMBER_VALIDATE","Swal","FormularioComponent","constructor","fb","toaster","ubicacionPais","ngOnInit","formularioGeneral","iniciarFormulario","group","nombre","required","pattern","isName","apellido","correo","isEmail","genero","fecha","isDate","mensaje","minLength","maxLength","departamento","municipio","canton","esCampoValido","campo","ValidarCampo","get","valid","touched","guardar","fire","position","title","text","icon","console","log","value","Object","values","controls","forEach","control","markAllAsTouched","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\luis2\\Downloads\\guia\\angular02\\src\\app\\shared\\formulario\\formulario.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { EMAIL_VALIDATE, NAME_VALIDATE, NUMBER_VALIDATE } from 'src/app/constants/constants';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n})\nexport class FormularioComponent implements OnInit {\n\n\n  formularioGeneral!: FormGroup;\n  private isEmail: string = EMAIL_VALIDATE;\n  private isName: string = NAME_VALIDATE;\n  private isMoney: string = NUMBER_VALIDATE;\n  private isDate: string = '';\n  constructor(private fb: FormBuilder, private toaster: ToastrService,\n    private ubicacionPais) { }\n\n\n\n  ngOnInit(): void {\n    this.formularioGeneral = this.iniciarFormulario();\n  }\n  private iniciarFormulario(): FormGroup{\n    return this.fb.group({\n      nombre: ['', [Validators.required, Validators.pattern(this.isName)]],\n      apellido: ['', [Validators.required, Validators.pattern(this.isName)]],\n      correo: ['', [Validators.required, Validators.pattern(this.isEmail)]],\n      genero: ['', [Validators.required]],\n      fecha: ['', [Validators.required, Validators.pattern(this.isDate)]],\n      mensaje: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(200)]],\n      departamento: ['', [Validators.required]],\n      municipio: ['', [Validators.required]],\n      canton: ['', [Validators.required]],\n    });\n  }\n  esCampoValido(campo: string){\n    const ValidarCampo = this.formularioGeneral.get(campo);\n    return !ValidarCampo?.valid && ValidarCampo?.touched\n    ? 'is-invalid' : ValidarCampo?.touched ? 'is-valid' : '';\n  }\n\n\nguardar(){\n  if (this.formularioGeneral.valid){\n    Swal.fire({\n      position: 'center',\n      title: 'Buen trabajo!',\n      text: `submit disparado, formulario es valido`,\n      icon: 'info',\n    });\n    console.log(this.formularioGeneral.value);\n  }else{\n    Swal.fire({\n      position: 'center',\n      title: 'Faltan datos en el formulario',\n      text: `submit disparado, formulario No valido`,\n      icon: 'warning',\n    });\n\n    return Object.values(this.formularioGeneral.controls)\n    .forEach((control) => control.markAllAsTouched()\n    );\n  }\n}\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}