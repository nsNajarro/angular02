{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MascotasservService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.baseUrl; //url backend\n  }\n\n  get mascotas() {\n    return this.http.get(`${this.baseUrl}/mascotas`);\n  }\n  buscarMascotas(termino) {\n    if (termino.length > 1) {\n      return this.http.get(`${this.baseUrl}/mascotas/?q=${termino}&_limits=5`);\n    } else {\n      return this.http.get(`${this.baseUrl}/mascotas`);\n    }\n  }\n  mascotasById(id) {\n    if (id.length > 0) {\n      return this.http.get(`${this.baseUrl}/mascotas/${id}`);\n    } else {\n      return this.http.get(`${this.baseUrl}/mascotas/`);\n    }\n  }\n  mascotasDelete(id) {\n    if (id.length > 0) {\n      return this.http.delete(`${this.baseUrl}/mascotas/${id}`);\n    } else {\n      return this.http.delete(`${this.baseUrl}/mascotas/`);\n    }\n  }\n  borrarMascotas(id) {\n    if (id.length > 0) {\n      return this.http.delete(`${this.baseUrl}/mascotas/${id}`);\n    } else {\n      return this.http.delete(`${this.baseUrl}/mascotas/`);\n    }\n  }\n}\nMascotasservService.ɵfac = function MascotasservService_Factory(t) {\n  return new (t || MascotasservService)(i0.ɵɵinject(i1.HttpClient));\n};\nMascotasservService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MascotasservService,\n  factory: MascotasservService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,8BAA8B;;;AAS1D,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAUH,WAAW,CAACI,OAAO,CAAC,CAAC;EAEL;;EAEzC,IAAIC,QAAQ;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAc,GAAG,IAAI,CAACF,OAAO,WAAW,CAAC;EAC/D;EAEAG,cAAc,CAAEC,OAAgB;IAC9B,IAAGA,OAAO,CAACC,MAAM,GAAG,CAAC,EAAC;MACpB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAc,GAAG,IAAI,CAACF,OAAO,gBAAgBI,OAAO,YAAY,CAAC;KACtF,MAAM;MACL,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAc,GAAG,IAAI,CAACF,OAAO,WAAW,CAAC;;EAEjE;EAEAM,YAAY,CAACC,EAAU;IACrB,IAAIA,EAAE,CAACF,MAAM,GAAG,CAAC,EAAE;MACjB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,OAAO,aAAaO,EAAE,EAAE,CAAC;KAClE,MAAM;MACL,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,OAAO,YAAY,CAAC;;EAEhE;EAEAQ,cAAc,CAACD,EAAU;IACvB,IAAIA,EAAE,CAACF,MAAM,GAAG,CAAC,EAAE;MACjB,OAAO,IAAI,CAACN,IAAI,CAACU,MAAM,CAAY,GAAG,IAAI,CAACT,OAAO,aAAaO,EAAE,EAAE,CAAC;KACrE,MAAM;MACL,OAAO,IAAI,CAACR,IAAI,CAACU,MAAM,CAAY,GAAG,IAAI,CAACT,OAAO,YAAY,CAAC;;EAEnE;EAEAU,cAAc,CAACH,EAAK;IAClB,IAAIA,EAAE,CAACF,MAAM,GAAG,CAAC,EAAE;MACjB,OAAO,IAAI,CAACN,IAAI,CAACU,MAAM,CAAY,GAAG,IAAI,CAACT,OAAO,aAAaO,EAAE,EAAE,CAAC;KACrE,MAAM;MACL,OAAO,IAAI,CAACR,IAAI,CAACU,MAAM,CAAY,GAAG,IAAI,CAACT,OAAO,YAAY,CAAC;;EAEnE;;AAxCWH,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAc,SAAnBd,mBAAmB;EAAAe,YAFlB;AAAM","names":["environment","MascotasservService","constructor","http","baseUrl","mascotas","get","buscarMascotas","termino","length","mascotasById","id","mascotasDelete","delete","borrarMascotas","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\luis2\\Downloads\\guia\\angular02\\src\\app\\modules\\mascotas\\services\\mascotasserv.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { IMascotas } from '../interface/mascotas.interface';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MascotasservService {\n\n  private baseUrl:string = environment.baseUrl; //url backend\n\n  constructor(private http : HttpClient){  }\n\n  get mascotas() : Observable<IMascotas[]> {\n    return this.http.get<IMascotas[]>(`${this.baseUrl}/mascotas`);\n  }\n\n  buscarMascotas( termino : string ) : Observable<IMascotas[]>{\n    if(termino.length > 1){\n      return this.http.get<IMascotas[]>(`${this.baseUrl}/mascotas/?q=${termino}&_limits=5`);\n    } else {\n      return this.http.get<IMascotas[]>(`${this.baseUrl}/mascotas`);\n    }\n  }\n\n  mascotasById(id: string): Observable<IMascotas> {\n    if (id.length > 0) {\n      return this.http.get<IMascotas>(`${this.baseUrl}/mascotas/${id}`);\n    } else {\n      return this.http.get<IMascotas>(`${this.baseUrl}/mascotas/`);\n    }\n  }\n\n  mascotasDelete(id: string): Observable<IMascotas> {\n    if (id.length > 0) {\n      return this.http.delete<IMascotas>(`${this.baseUrl}/mascotas/${id}`);\n    } else {\n      return this.http.delete<IMascotas>(`${this.baseUrl}/mascotas/`);\n    }\n  }\n\n  borrarMascotas(id: I): Observable<IMascotas> {\n    if (id.length > 0) {\n      return this.http.delete<IMascotas>(`${this.baseUrl}/mascotas/${id}`);\n    } else {\n      return this.http.delete<IMascotas>(`${this.baseUrl}/mascotas/`);\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}